(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-02817b8c"],{"6cbe":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return l}));var i=t("a4ee"),r=(t("e92d"),t("cea0"),t("b50f"),t("c120"),t("2dd4"),t("d386")),s=t("189c6"),c=t("d7bb");let n=class extends(Object(c["a"])(s["default"])){};n=Object(i["a"])([Object(r["a"])("esri.views.2d.layers.OGCFeatureLayerView2D")],n);const l=n},d7bb:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));var i=t("a4ee"),r=t("ce50"),s=t("59b2"),c=(t("b50f"),t("c120"),t("cea0"),t("d386"));const n=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new r["a"]("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return Object(i["a"])([Object(s["b"])()],a.prototype,"layer",void 0),Object(i["a"])([Object(s["b"])({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i["a"])([Object(c["a"])("esri.views.layers.OGCFeatureLayerView")],a),a}}}]);
//# sourceMappingURL=chunk-02817b8c.1469122f.js.map