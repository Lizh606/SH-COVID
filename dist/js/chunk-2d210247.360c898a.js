(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d210247"],{b740:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return F}));var a=r("a4ee"),i=r("59b2"),s=(r("b50f"),r("c120"),r("cea0"),r("d386")),o=r("2eab"),n=r("a3a2"),c=r("a8d5"),l=r("c279"),u=r("bb72"),p=(r("e06a"),r("8d60")),b=r("6a0e"),y=r("b2b2"),d=r("afcf"),O=r("5996"),f=r("5b29"),j=r("2edc"),m=r("95a2"),B=r("4ae5"),g=r("521c"),h=r("1219");function v(e){return e.features.map(t=>{const r=O["a"].fromJSON(e.spatialReference),a=p["a"].fromJSON(t);return Object(y["l"])(a.geometry)&&(a.geometry.spatialReference=r),a})}function w(e){return j["default"].fromJSON(e).features.map(e=>e.geometry)}let R=class extends b["a"]{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return w(e)}readIncidents(e){return w(e)}readPointBarriers(e,t){return w(t.barriers)}readPolylineBarriers(e){return w(e)}readPolygonBarriers(e){return w(e)}readRoutes(e){return v(e)}};Object(a["a"])([Object(i["b"])({type:[f["a"]]})],R.prototype,"directions",void 0),Object(a["a"])([Object(i["b"])({type:[B["a"]]})],R.prototype,"facilities",void 0),Object(a["a"])([Object(d["a"])("facilities")],R.prototype,"readFacilities",null),Object(a["a"])([Object(i["b"])({type:[B["a"]]})],R.prototype,"incidents",void 0),Object(a["a"])([Object(d["a"])("incidents")],R.prototype,"readIncidents",null),Object(a["a"])([Object(i["b"])({type:[m["a"]]})],R.prototype,"messages",void 0),Object(a["a"])([Object(i["b"])({type:[B["a"]]})],R.prototype,"pointBarriers",void 0),Object(a["a"])([Object(d["a"])("pointBarriers",["barriers"])],R.prototype,"readPointBarriers",null),Object(a["a"])([Object(i["b"])({type:[g["a"]]})],R.prototype,"polylineBarriers",void 0),Object(a["a"])([Object(d["a"])("polylineBarriers")],R.prototype,"readPolylineBarriers",null),Object(a["a"])([Object(i["b"])({type:[h["a"]]})],R.prototype,"polygonBarriers",void 0),Object(a["a"])([Object(d["a"])("polygonBarriers")],R.prototype,"readPolygonBarriers",null),Object(a["a"])([Object(i["b"])({type:[p["a"]]})],R.prototype,"routes",void 0),Object(a["a"])([Object(d["a"])("routes")],R.prototype,"readRoutes",null),R=Object(a["a"])([Object(s["a"])("esri.rest.support.ClosestFacilitySolveResult")],R);const P=R,A=Object(n["a"])({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});async function N(e,t,r){const a=[],i=[],s={},n={},p=Object(u["c"])(e),{path:b}=p;t.incidents&&t.incidents.features&&Object(l["a"])(t.incidents.features,i,"incidents.features",s),t.facilities&&t.facilities.features&&Object(l["a"])(t.facilities.features,i,"facilities.features",s),t.pointBarriers&&t.pointBarriers.features&&Object(l["a"])(t.pointBarriers.features,i,"pointBarriers.features",s),t.polylineBarriers&&t.polylineBarriers.features&&Object(l["a"])(t.polylineBarriers.features,i,"polylineBarriers.features",s),t.polygonBarriers&&t.polygonBarriers.features&&Object(l["a"])(t.polygonBarriers.features,i,"polygonBarriers.features",s);const y=await Object(c["a"])(i);for(const o in s){const e=s[o];a.push(o),n[o]=y.slice(e[0],e[1])}if(Object(l["e"])(n,a)){let e=null;try{e=await Object(l["c"])(b,t.apiKey,r)}catch{}e&&!e.hasZ&&Object(l["b"])(n,a)}for(const o in n)n[o].forEach((e,r)=>{t.get(o)[r].geometry=e});const d={...r,query:{...p.query,...A.toQueryParams(t),f:"json"}},{data:O}=await Object(o["default"])(b+"/solveClosestFacility",d);return P.fromJSON(O)}var S=r("9209");let k=class extends S["a"]{constructor(e){super(e),this.url=null}solve(e,t){return N(this.url,e,t)}};Object(a["a"])([Object(i["b"])()],k.prototype,"url",void 0),k=Object(a["a"])([Object(s["a"])("esri.tasks.ClosestFacilityTask")],k);const F=k}}]);
//# sourceMappingURL=chunk-2d210247.360c898a.js.map