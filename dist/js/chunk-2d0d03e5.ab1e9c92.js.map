{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/core/workers/request.js"],"names":["r","s","a","n","responseType","o","signal","globalThis","invokeStaticMessage","url","options","then","async","i","l","u","c","b","t","data","ArrayBuffer","Blob","FileReaderSync","readAsText","JSON","parse","f","requestOptions","message","error","fetch","ssl"],"mappings":"kHAAA,2EAIgE,IAAIA,EAAE,SAASC,EAAEA,EAAEC,GAAG,IAAIC,EAAED,EAAEE,aAAaD,EAAE,iBAAiBA,GAAG,SAASA,GAAG,SAASA,GAAG,WAAWA,GAAG,wBAAwBA,GAAG,SAASA,IAAIA,EAAE,QAAQA,EAAE,OAAOD,EAAEE,aAAaD,EAAE,MAAME,EAAE,eAAEH,EAAEI,QAAQ,cAAcJ,EAAEI,OAAOC,WAAWC,oBAAoB,UAAU,CAACC,IAAIR,EAAES,QAAQR,GAAG,CAACI,OAAOD,IAAIM,KAAK,MAACC,IAAU,IAAIC,EAAEC,EAAEC,EAAEC,EAAEC,EAAE,GAAGC,EAAEC,KAAK,GAAGD,EAAEC,gBAAgBC,aAAa,KAAK,SAASjB,GAAG,SAASA,GAAG,SAASA,IAAIU,EAAE,IAAIQ,KAAK,CAACH,EAAEC,OAAO,SAAShB,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIsB,gBAAgBN,EAAEhB,EAAEuB,WAAWV,GAAG,SAASV,KAAK,CAAC,IAAIW,EAAEU,KAAKC,MAAMT,GAAG,MAAM,MAAMU,GAAG,MAAMR,EAAE,IAAIQ,EAAEjB,IAAIR,EAAE0B,eAAezB,GAAG,MAAM,IAAI,OAAE,iBAAiBwB,EAAEE,QAAQV,GAAG,GAAGJ,EAAEe,MAAM,CAAC,MAAMX,EAAE,IAAIJ,EAAEe,MAAMpB,IAAIR,EAAE0B,eAAezB,GAAG,MAAM,IAAI,OAAE,iBAAiBY,EAAEe,MAAMD,QAAQV,SAAS,WAAWf,IAAIe,EAAEC,KAAKb,OAAOD,EAAEU,QAAQe,MAAMZ,EAAEC,KAAKV,IAAIS,EAAEC,OAAO,OAAOhB,GAAG,IAAI,OAAOc,EAAEJ,EAAE,MAAM,IAAI,OAAOI,EAAEH,EAAE,MAAM,IAAI,SAASG,EAAEF,EAAE,MAAM,IAAI,OAAOE,EAAED,EAAE,MAAM,QAAQC,EAAEC,EAAEC,KAAK,MAAM,CAACA,KAAKF,EAAEU,eAAezB,EAAE6B,IAAIb,EAAEa,IAAItB,IAAIR","file":"js/chunk-2d0d03e5.ab1e9c92.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport e from\"../Error.js\";import{unwrap as t}from\"../maybe.js\";let r;function s(s,a){let n=a.responseType;n?\"array-buffer\"!==n&&\"blob\"!==n&&\"json\"!==n&&\"native\"!==n&&\"native-request-init\"!==n&&\"text\"!==n&&(n=\"text\"):n=\"json\",a.responseType=n;const o=t(a.signal);return delete a.signal,globalThis.invokeStaticMessage(\"request\",{url:s,options:a},{signal:o}).then((async t=>{let i,l,u,c,b;if(t.data)if(t.data instanceof ArrayBuffer){if(!(\"json\"!==n&&\"text\"!==n&&\"blob\"!==n||(i=new Blob([t.data]),\"json\"!==n&&\"text\"!==n||(r||(r=new FileReaderSync),c=r.readAsText(i),\"json\"!==n)))){try{l=JSON.parse(c||null)}catch(f){const t={...f,url:s,requestOptions:a};throw new e(\"request:server\",f.message,t)}if(l.error){const t={...l.error,url:s,requestOptions:a};throw new e(\"request:server\",l.error.message,t)}}}else\"native\"===n&&(t.data.signal=o,u=await fetch(t.data.url,t.data));switch(n){case\"blob\":b=i;break;case\"json\":b=l;break;case\"native\":b=u;break;case\"text\":b=c;break;default:b=t.data}return{data:b,requestOptions:a,ssl:t.ssl,url:s}}))}export{s as execute};\n"],"sourceRoot":""}