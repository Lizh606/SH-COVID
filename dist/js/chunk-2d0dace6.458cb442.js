(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0dace6"],{"6cbe":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return o}));var i=t("a4ee"),r=(t("e92d"),t("cea0"),t("b50f"),t("c120"),t("2dd4"),t("d386")),s=t("189c6"),c=t("ce50"),l=t("59b2");const n=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new c["a"]("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return Object(i["a"])([Object(l["b"])()],a.prototype,"layer",void 0),Object(i["a"])([Object(l["b"])({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i["a"])([Object(r["a"])("esri.views.layers.OGCFeatureLayerView")],a),a};let d=class extends(n(s["default"])){};d=Object(i["a"])([Object(r["a"])("esri.views.2d.layers.OGCFeatureLayerView2D")],d);const o=d}}]);
//# sourceMappingURL=chunk-2d0dace6.458cb442.js.map