(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237932"],{fc65:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return At}));var i,a=r("a4ee"),n=r("4856"),s=r("b2b2"),o=r("e694"),l=r("f4cc"),c=r("59b2"),u=(r("b50f"),r("c120"),r("cea0")),p=r("d386"),d=r("09db"),m=r("a6a3"),b=r("e06a"),h=r("8d60"),y=r("ba40"),f=r("2eab"),O=r("ce50"),j=r("fa8a"),g=r("7ffa"),v=r("e92d"),R=r("e041"),w=r("4adc"),S=r("afcf"),x=r("22f4"),I=r("b627"),N=r("6a0e"),_=r("448d");const T=new Set(["raster","raster2","dem","fillraster"]),F=new Set(["rasters"]),C=e=>e&&e.rasterFunction?J.fromJSON(e):e,P=e=>e&&e instanceof J?e.toJSON():e,D=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,M=e=>D(e)?new J(e):e;var A;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(A||(A={}));const V=e=>{if(null==e)return null;e=Object(g["a"])(e);const t={};for(const r of Object.keys(e))T.has(r.toLowerCase())?t[r]=C(e[r]):F.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(C):t[r]=e[r];return t};let J=i=class extends N["a"]{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some(t=>T.has(t.toLowerCase())&&D(e[t]))||t.some(t=>F.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some(e=>D(e)))){e=Object(g["a"])(e);for(const r of t)T.has(r.toLowerCase())?e[r]=M(e[r]):F.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map(e=>M(e)))}}this._set("functionArguments",e)}readFunctionArguments(e,t){return e=t.arguments||t.rasterFunctionArguments,V(e)}writeFunctionArguments(e,t,r){const i={};for(const a of Object.keys(e))T.has(a.toLowerCase())?i[a]=P(e[a]):F.has(a.toLowerCase())&&Array.isArray(e[a])?i[a]=e[a].map(P):i[a]=P(e[a]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos,i=t.name;return i||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return A[e]}writeFunctionType(e,t,r){t[r]=A[e]}clone(){return new i({functionName:this.functionName,functionArguments:Object(g["a"])(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};Object(a["a"])([Object(c["b"])({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],J.prototype,"functionArguments",null),Object(a["a"])([Object(S["a"])("functionArguments",["rasterFunctionArguments","arguments"])],J.prototype,"readFunctionArguments",null),Object(a["a"])([Object(d["a"])("functionArguments")],J.prototype,"writeFunctionArguments",null),Object(a["a"])([Object(c["b"])({json:{type:String,write:{target:"rasterFunction"}}})],J.prototype,"functionName",void 0),Object(a["a"])([Object(S["a"])("functionName",["rasterFunction","rasterFunctionInfos","name"])],J.prototype,"readFunctionName",null),Object(a["a"])([Object(d["a"])("functionName")],J.prototype,"writeFunctionName",null),Object(a["a"])([Object(_["a"])({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(c["b"])({json:{default:"unknown"}})],J.prototype,"outputPixelType",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:!0,write:!0}})],J.prototype,"variableName",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"description",void 0),Object(a["a"])([Object(c["b"])({json:{origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"functionType",void 0),Object(a["a"])([Object(S["a"])("functionType")],J.prototype,"readFunctionType",null),Object(a["a"])([Object(d["a"])("functionType")],J.prototype,"writeFunctionType",null),Object(a["a"])([Object(c["b"])({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"functionDefinition",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"thumbnail",void 0),J=i=Object(a["a"])([Object(p["a"])("esri.layers.support.RasterFunction")],J);const k=J;var q=r("7c6e"),z=r("6557"),E=r("c3fc");const L={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Q={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},U=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function H(e){return U.has(e.type)}function G(e,t){if(!e||!t)return Object(g["a"])(e||t);const r=Object(g["a"])(e);return"none"!==t.functionName.toLowerCase()&&(W(r.functionArguments).Raster=t),r}function B(e,t){switch(t=t||{},e.type){case"raster-stretch":return $(e,t);case"class-breaks":return Z(e,t);case"unique-value":return re(e,t);case"raster-colormap":return ie(e,t);case"vector-field":return K(e,t);case"raster-shaded-relief":return Y(e,t);case"animated-flow":throw new Error("Unsupported rendering rule.")}}function W(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?W(t.functionArguments):e}const X={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function K(e,t){const r=new k;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:a}=t,n="vector-uv"===i;let s,o;a&&2===a.length&&(s=a.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=a.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter(e=>"Magnitude"===e.field)[0]:new E["a"],p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Q[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return r.functionArguments=p,r}function Y(e,t){if("elevation"!==t.dataType)return new k;const r=new k;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,n={HillshadeType:i,SlopeType:a,ZFactor:e.zFactor};return 0===i&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===a&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),r.functionArguments=n,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",n.Colormap=Object(q["b"])(e.colorRamp,256)),r}function $(e,t){const r=new k;r.functionName="Stretch";const i=X[z["b"].toJSON(e.stretchType)],a="u8",n={StretchType:i,Statistics:ae(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(n.Min=e.outputMin),null!=e.outputMax&&(n.Max=e.outputMax),i===X.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=a):i===X.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType=a):i===X.minMax?r.outputPixelType=a:i===X.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=n,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,a=new k,n=Object(q["c"])(i);return n?a.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?a.functionArguments={colorRamp:e.colorRamp.toJSON()}:a.functionArguments={Colormap:Object(q["b"])(i,256)},a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=r,a}return r}function Z(e,t){const r=[],i=[],a=[],n=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=te(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol.color;let a;i.a&&c.forEach(s=>{a=s.attributes[e.field],(a>=t.minValue&&a<t.maxValue||r===e.classBreakInfos.length-1&&a>=t.minValue)&&n.push([s.attributes[u],i.r,i.g,i.b])})});const t=o?ee(n,o):n,r=new k;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),i.push(t),n.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)});const p=o?ee(n,o):n,d=new k;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:a},d.variableName="Raster";const m=new k;return m.functionName="Colormap",m.functionArguments={Colormap:p,Raster:d},m}function ee(e,t){const r=L[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function te(e){if(!e)return;const{fields:t}=e,r=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return r&&r.name}function re(e,t){var r;const i=[],{pixelType:a,rasterAttributeTable:n}=t,s=n&&n.features,o=te(n),l=null==(r=e.defaultSymbol)?void 0:r.color;let c=!1;if(e.uniqueValueInfos&&(s?s.forEach(t=>{var r;const a=null==(r=e.uniqueValueInfos.find(r=>String(t.attributes[e.field])===String(r.value)))?void 0:r.symbol.color;a?i.push([t.attributes[o],a.r,a.g,a.b]):l&&i.push([t.attributes[o],l.r,l.g,l.b])}):e.uniqueValueInfos.forEach(e=>{var t;if(null==(t=e.symbol.color)||!t.a)return;const r=e.symbol.color;isNaN(+e.value)?c=!0:i.push([+e.value,r.r,r.g,r.b])})),c)return null;const u=a&&i.length>0?ee(i,a):i,p=new k;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",p}function ie(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,a=i?ee(r,i):r,n=new k;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=a,n}function ae(e){const t=[];return e.forEach(e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}}),t}var ne,se=r("1a3e"),oe=r("4ae5");const le=Object(j["b"])()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),ce=Object(j["b"])()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function ue(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return ce.fromJSON(t)}let pe=ne=class extends N["a"]{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return ue(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=r||(i?le.toJSON(i):null);return le.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new ne({ascending:this.ascending,itemRenderingRule:Object(g["a"])(this.itemRenderingRule),lockRasterIds:Object(g["a"])(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(g["a"])(this.multidimensionalDefinition),objectIds:Object(g["a"])(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(g["a"])(this.viewpoint),where:this.where})}};Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],pe.prototype,"ascending",void 0),Object(a["a"])([Object(S["a"])("ascending",["ascending","sortAscending"])],pe.prototype,"readAscending",null),Object(a["a"])([Object(c["b"])({type:k,json:{write:!0}})],pe.prototype,"itemRenderingRule",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],pe.prototype,"lockRasterIds",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{type:ce.jsonValues,write:{target:"mosaicMethod",writer:ce.write}}})],pe.prototype,"method",void 0),Object(a["a"])([Object(S["a"])("method",["mosaicMethod","defaultMosaicMethod"])],pe.prototype,"readMethod",null),Object(a["a"])([Object(c["b"])({type:[I["a"]],json:{write:!0}})],pe.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{name:"fids",write:!0}})],pe.prototype,"objectIds",void 0),Object(a["a"])([Object(c["b"])({json:{type:le.jsonValues,read:{reader:le.read},write:{target:"mosaicOperation",writer:le.write}}})],pe.prototype,"operation",void 0),Object(a["a"])([Object(S["a"])("operation",["mosaicOperation","mosaicOperator"])],pe.prototype,"readOperation",null),Object(a["a"])([Object(c["b"])({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],pe.prototype,"sortField",void 0),Object(a["a"])([Object(c["b"])({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],pe.prototype,"sortValue",void 0),Object(a["a"])([Object(se["a"])("sortValue")],pe.prototype,"castSortValue",null),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],pe.prototype,"viewpoint",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=ne=Object(a["a"])([Object(p["a"])("esri.layers.support.MosaicRule")],pe);const de=pe;var me=r("4607");let be=class extends N["a"]{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new de({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:a}=t;return a&&H(a)?G(B(a,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=new k({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return G(i,e)}};Object(a["a"])([Object(c["b"])()],be.prototype,"layer",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(d["a"])("adjustAspectRatio")],be.prototype,"writeAdjustAspectRatio",null),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(w["a"])("layer.bandIds")],be.prototype,"bandIds",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"compression",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(w["a"])("layer.compressionQuality")],be.prototype,"compressionQuality",void 0),Object(a["a"])([Object(d["a"])("compressionQuality")],be.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(w["a"])("layer.compressionTolerance")],be.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(d["a"])("compressionTolerance")],be.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(w["a"])("layer.format")],be.prototype,"format",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:{reader:me["a"].read},write:{writer:me["a"].write}}}),Object(w["a"])("layer.interpolation")],be.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(w["a"])("layer.noData")],be.prototype,"noData",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:{reader:me["b"].read},write:{writer:me["b"].write}}}),Object(w["a"])("layer.noDataInterpretation")],be.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"pixelType",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"lercVersion",void 0),Object(a["a"])([Object(d["a"])("lercVersion")],be.prototype,"writeLercVersion",null),Object(a["a"])([Object(c["b"])({type:Number})],be.prototype,"version",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"mosaicRule",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],be.prototype,"renderingRule",null),be=Object(a["a"])([Object(p["a"])("esri.layers.mixins.ExportImageServiceParameters")],be);var he=r("a1f3"),ye=r("80b7"),fe=r("3e27"),Oe=r("a4f3"),je=r("da6b"),ge=r("1451"),ve=r("19db"),Re=r("1ccd"),we=r("7220"),Se=r("a8d5"),xe=r("bb72"),Ie=r("5996");let Ne=class extends N["a"]{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],Ne.prototype,"north",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],Ne.prototype,"up",void 0),Object(a["a"])([Object(c["b"])({type:Ie["a"],json:{write:!0}})],Ne.prototype,"spatialReference",void 0),Ne=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageAngleResult")],Ne);const _e=Ne;var Te=r("2edc");let Fe=class extends N["a"]{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"catalogItemVisibilities",void 0),Object(a["a"])([Object(c["b"])({type:Te["default"],json:{write:!0}})],Fe.prototype,"catalogItems",void 0),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],Fe.prototype,"location",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"name",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"objectId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"processedValues",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"properties",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Fe.prototype,"value",void 0),Fe=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageIdentifyResult")],Fe);const Ce=Fe;let Pe=class extends N["a"]{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],Pe.prototype,"attributes",void 0),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],Pe.prototype,"location",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Pe.prototype,"locationId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Pe.prototype,"rasterId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Pe.prototype,"resolution",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Pe.prototype,"pixelValue",void 0),Pe=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSample")],Pe);const De=Pe;let Me=class extends N["a"]{constructor(){super(...arguments),this.samples=null}};Object(a["a"])([Object(c["b"])({type:[De],json:{write:!0}})],Me.prototype,"samples",void 0),Me=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSampleResult")],Me);const Ae=Me;let Ve=class extends N["a"]{constructor(){super(...arguments),this.geometries=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],Ve.prototype,"geometries",void 0),Ve=Object(a["a"])([Object(p["a"])("esri.rest.support.ImagePixelLocationResult")],Ve);const Je=Ve;function ke(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}async function qe(e,t,r){const i=Object(xe["c"])(e),a=t.geometry?[t.geometry]:[],n=await Object(Se["a"])(a),o=t.toJSON();ke(o);const l=n&&n[0];Object(s["k"])(l)&&(o.geometry=l.toJSON());const c=Object(xe["b"])({...i.query,f:"json",...o});return Object(xe["a"])(c,r)}async function ze(e,t,r){var i;const a=t.toJSON();Object(s["k"])(a.angleName)&&(a.angleName=a.angleName.join(",")),Object(s["k"])(t.point)&&null!=(i=t.point.spatialReference)&&i.imageCoordinateSystem&&(a.point.spatialReference=Ge(t.point.spatialReference)),Object(s["k"])(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(a.spatialReference=Be(t.spatialReference));const n=Object(xe["c"])(e),o=Object(xe["b"])({...n.query,f:"json",...a}),l=Object(xe["a"])(o,r),{data:c}=await Object(f["default"])(n.path+"/computeAngles",l);return c.spatialReference=c.spatialReference?null!=c.spatialReference.geodataXform?new Ie["a"]({wkid:0,imageCoordinateSystem:c.spatialReference}):Ie["a"].fromJSON(c.spatialReference):null,"NaN"===c.north&&(c.north=null),"NaN"===c.up&&(c.up=null),new _e(c)}async function Ee(e,t,r){const i=t.toJSON(),{geometries:a}=t;for(let u=0;u<a.length;u++){var n;null!=(n=a[u].spatialReference)&&n.imageCoordinateSystem&&(i.geometries.geometries[u].spatialReference=Ge(a[u].spatialReference))}const s=Object(xe["c"])(e),o=Object(xe["b"])({...s.query,f:"json",...i}),l=Object(xe["a"])(o,r),{data:c}=await Object(f["default"])(s.path+"/computePixelLocation",l);return Je.fromJSON(c)}async function Le(e,t,r){const i=await qe(e,t,r),a=Object(xe["c"])(e),{data:n}=await Object(f["default"])(a.path+"/computeStatisticsHistograms",i),{statistics:s}=n;return null!=s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:n.histograms}}async function Qe(e,t,r){const i=await qe(e,t,r),a=Object(xe["c"])(e),{data:n}=await Object(f["default"])(a.path+"/computeHistograms",i);return{histograms:n.histograms}}async function Ue(e,t,r){var i,a;const n=t.toJSON();ke(n),null!=(i=n.outFields)&&i.length&&(n.outFields=n.outFields.join(","));const o=await Object(Se["a"])(t.geometry),l=null==o?void 0:o[0];Object(s["k"])(l)&&(n.geometry=l.toJSON());const c=Object(xe["c"])(e),u=Object(xe["b"])({...c.query,f:"json",...n}),p=Object(xe["a"])(u,r),{data:d}=await Object(f["default"])(c.path+"/getSamples",p),m=null==d||null==(a=d.samples)?void 0:a.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return Ae.fromJSON({samples:m})}async function He(e,t,r){const i=Object(xe["c"])(e),a=t.geometry?[t.geometry]:[];return Object(Se["a"])(a).then(e=>{const a=t.toJSON(),n=e&&e[0];Object(s["k"])(n)&&(a.geometry=JSON.stringify(n.toJSON()));const o=Object(xe["b"])({...i.query,f:"json",...a}),l=Object(xe["a"])(o,r);return Object(f["default"])(i.path+"/identify",l)}).then(e=>Ce.fromJSON(e.data))}function Ge(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function Be(e,t){const r=Ge(e),{icsid:i,icsns:a,wkid:n}=r;return null!=i?null==a||null!=t&&t.toLowerCase().includes("/"+a.toLowerCase()+"/")?"0:"+i:JSON.stringify(r):n?n.toString():JSON.stringify(r)}r("8048"),r("f7be"),r("c8d6"),r("ebb2");var We,Xe=r("c89c"),Ke=r("3af1"),Ye=(r("3760"),r("57dc")),$e=r("1219"),Ze=(r("521c"),r("54b4"),r("013b"),r("7f83"),r("69dd")),et=r("b745"),tt=r("a1d1");r("6655"),r("b742"),r("7949");let rt=We=class extends N["a"]{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new We(Object(g["a"])({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};Object(a["a"])([Object(c["b"])({type:[String],json:{name:"angleName",write:!0}})],rt.prototype,"angleNames",void 0),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],rt.prototype,"point",void 0),Object(a["a"])([Object(c["b"])({type:Ie["a"],json:{write:!0}})],rt.prototype,"spatialReference",void 0),Object(a["a"])([Object(c["b"])({type:u["a"],json:{write:!0}})],rt.prototype,"rasterId",void 0),rt=We=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageAngleParameters")],rt);const it=rt;var at,nt=r("658b"),st=r("a9ab");let ot=at=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(st["c"])(e),t[r]=e.toJSON())}clone(){return new at(Object(g["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({types:b["a"],json:{read:st["a"]}})],ot.prototype,"geometry",void 0),Object(a["a"])([Object(d["a"])("geometry")],ot.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:de,json:{write:!0}})],ot.prototype,"mosaicRule",void 0),Object(a["a"])([Object(c["b"])({type:k,json:{write:!0}})],ot.prototype,"renderingRule",void 0),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],ot.prototype,"pixelSize",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ot.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({type:nt["a"],json:{read:{source:"time"},write:{target:"time"}}})],ot.prototype,"timeExtent",void 0),ot=at=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageHistogramParameters")],ot);const lt=ot;var ct;let ut=ct=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(st["c"])(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=de.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=k.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=Object(s["k"])(e.start)?e.start.getTime():null,a=Object(s["k"])(e.end)?e.end.getTime():null;t[r]=null!=i?null!=a?`${i},${a}`:""+i:null}}clone(){return new ct(Object(g["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],ut.prototype,"geometry",void 0),Object(a["a"])([Object(d["a"])("geometry")],ut.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:de,json:{write:!0}})],ut.prototype,"mosaicRule",null),Object(a["a"])([Object(d["a"])("mosaicRule")],ut.prototype,"writeMosaicRule",null),Object(a["a"])([Object(c["b"])({type:k,json:{write:!0}})],ut.prototype,"renderingRule",null),Object(a["a"])([Object(d["a"])("renderingRule")],ut.prototype,"writeRenderingRule",null),Object(a["a"])([Object(c["b"])({type:[k],json:{write:!0}})],ut.prototype,"renderingRules",void 0),Object(a["a"])([Object(d["a"])("renderingRules")],ut.prototype,"writeRenderingRules",null),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],ut.prototype,"pixelSize",void 0),Object(a["a"])([Object(d["a"])("pixelSize")],ut.prototype,"writePixelSize",null),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],ut.prototype,"returnGeometry",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],ut.prototype,"returnCatalogItems",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],ut.prototype,"returnPixelValues",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],ut.prototype,"maxItemCount",void 0),Object(a["a"])([Object(c["b"])({type:nt["a"],json:{write:{target:"time"}}})],ut.prototype,"timeExtent",void 0),Object(a["a"])([Object(d["a"])("timeExtent")],ut.prototype,"writeTimeExtent",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ut.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ut.prototype,"viewId",void 0),ut=ct=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageIdentifyParameters")],ut);const pt=ut;var dt;let mt=dt=class extends N["a"]{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){return new dt({geometries:this.geometries.map(e=>e.clone()),rasterId:this.rasterId})}};Object(a["a"])([Object(c["b"])({type:[oe["a"]],json:{write:!0}})],mt.prototype,"geometries",void 0),Object(a["a"])([Object(d["a"])("geometries")],mt.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:u["a"],json:{write:!0}})],mt.prototype,"rasterId",void 0),mt=dt=Object(a["a"])([Object(p["a"])("esri.rest.support.ImagePixelLocationParameters")],mt);const bt=mt;var ht;let yt=ht=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(st["c"])(e),t[r]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new Ye["a"]({spatialReference:e[0].spatialReference});t.points=e.map(e=>[e.x,e.y]),this._set("locations",e),this.geometry=t}}clone(){return new ht(Object(g["a"])({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({types:b["a"],json:{read:st["a"]}})],yt.prototype,"geometry",void 0),Object(a["a"])([Object(d["a"])("geometry")],yt.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:String,json:{type:me["a"].jsonValues,read:me["a"].read,write:me["a"].write}})],yt.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])({type:de,json:{write:!0}})],yt.prototype,"mosaicRule",void 0),Object(a["a"])([Object(c["b"])({type:[String],json:{write:!0}})],yt.prototype,"outFields",void 0),Object(a["a"])([Object(c["b"])({type:oe["a"],json:{write:!0}})],yt.prototype,"pixelSize",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{write:!0}})],yt.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],yt.prototype,"returnFirstValueOnly",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],yt.prototype,"sampleDistance",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],yt.prototype,"sampleCount",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],yt.prototype,"sliceId",void 0),Object(a["a"])([Object(c["b"])({type:nt["a"],json:{read:{source:"time"},write:{target:"time"}}})],yt.prototype,"timeExtent",void 0),yt=ht=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSampleParameters")],yt);const ft=yt;var Ot=r("2616");const jt=v["a"].getLogger("esri.layers.mixins.ArcGISImageService"),gt=Object(j["b"])()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),vt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Rt=Object(c["a"])(u["i"],{min:0,max:255});function wt(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}const St=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new be({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?de.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new ye["a"](this.fields):null}set format(e){e&&vt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=de.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?de.fromJSON(r):this._isMosaicRuleSupported(t)?de.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const a=this.definitionExpression;i?a&&a!==i.where&&(i=i.clone(),i.where=a):a&&(i=new de({where:a})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Rt(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?Object(R["K"])(this.url):null}readRenderer(e,t,r){var i,a;const n=null==t||null==(i=t.layerDefinition)||null==(a=i.drawingInfo)?void 0:a.renderer,s=Object(y["b"])(n,r);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),H(s)||jt.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new he["a"]({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new he["a"]({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new he["a"]({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(g["a"])(this.fields):[];a.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(i),Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new he["a"]({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new he["a"]({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new he["a"]({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const r=Object(g["a"])(t);return r.name=e+t.name,r});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=k.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?k.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?Ie["a"].fromJSON(r):null}readPixelType(e){return gt.fromJSON(e)||e}writePixelType(e,t,r){(Object(s["j"])(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=gt.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){i&&(this._symbolizer.bind(),await a.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new O["a"]("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=Object(u["d"])(it,e).clone(),ze(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new O["a"]("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=Object(u["d"])(bt,e).clone(),Ee(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new O["a"]("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=Object(u["d"])(lt,e).clone();const{raster:r,mosaicRule:i,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),Qe(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new O["a"]("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=Object(u["d"])(lt,e).clone();const{raster:r,mosaicRule:i,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),Le(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return Object(s["k"])(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new O["a"]("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return Object(l["x"])(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(f["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new O["a"]("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(f["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>Te["default"].fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const r=Object(f["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),i=Object(f["default"])(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),a=await Promise.all([r,i]);if(!a[0])return;const n=Ke["a"].fromJSON(a[0].extent),s=a[0].statistics?a[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new Oe["a"]({bandCount:a[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new oe["a"]({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:n.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:s,histograms:a[0].histograms,keyProperties:a[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await Object(f["default"])(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let a=null;try{a=(await Object(f["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(f["default"])(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(f["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=5,u=(a.xmin+a.xmax)/2,p=(a.ymax-a.ymin)/(c+1),d=a.ymin+p,m=[];for(let f=0;f<c;f++)m.push({x:u,y:d+p*f});const b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},h=Object(f["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...t}).then(e=>e.data).catch(()=>({})),y=await Promise.all([n,l,h]);let O=y[0].ipxf;if(null==O){var j,g,v;const e=null==(j=i.geodataXform)?void 0:j.xf_0;"topup"===(null==e||null==(g=e.name)?void 0:g.toLowerCase())&&6===(null==e||null==(v=e.coefficients)?void 0:v.length)&&(O={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=Ke["a"].fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);R&&(R.spatialReference=new Ie["a"]({wkid:0,imageCoordinateSystem:i}));const w=y[2].geometries?y[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],S=w.length;if(S<3)return{ics:i,icsToPixelTransform:O,icsExtent:R,northDirection:null};let x=0,I=0,N=0,_=0;for(let f=0;f<S;f++)x+=w[f].x,I+=w[f].y,N+=w[f].x*w[f].x,_+=w[f].x*w[f].y;const T=(S*_-x*I)/(S*N-x*x);let F=0;const C=w[c-1].x>w[0].x,P=w[c-1].y>w[0].y;return T===1/0?F=P?90:270:0===T?F=C?0:180:T>0?F=C?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(F=P?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:O,icsExtent:R,northDirection:F}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&Object(s["k"])(this.serviceRasterInfo))return this.serviceRasterInfo;const r=wt(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){e=e.clone().shiftCentralMeridian();const a=Be(e.spatialReference,this.parsedUrl.path);Object(s["k"])(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=n;let{renderingRule:c}=n;const u=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase(),p=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=o&&o.length&&u&&p){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===c.rasterFunction)e.rasterFunctionArguments.Raster=c.rasterFunctionArguments.Raster,c.rasterFunctionArguments.Raster=e;else if("Colormap"===c.rasterFunction){const t=c.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,c.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=c,c=e;n.bandIds=void 0}else n.bandIds=null==o?void 0:o.join(",");l instanceof Array&&l.length>0&&(n.noData=l.join(","));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;n.mosaicRule=d&&JSON.stringify(d),n.renderingRule=c&&JSON.stringify(c);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...n,...m}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new O["a"]("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=Object(u["d"])(ft,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),Ue(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new O["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");e=Object(u["d"])(pt,e).clone();const{raster:r,mosaicRule:i,renderingRule:a}=this;if(a&&null==e.renderingRule&&(e.renderingRule=a),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=Object(s["r"])(t)}return r&&null==e.raster&&(e.raster=r),He(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Ze["a"];return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(tt["a"])(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(et["a"])(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Xe["a"])(this.url,e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new O["a"]("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:a,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(s["k"])(e.outFields)&&(o=e.outFields.some(e=>-1===e.toLowerCase().indexOf(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(u)>-1&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new k({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const d=Object(s["j"])(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=e.timeExtent||this.timeExtent,b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,m),h=this._getQueryParams({geometry:e.geometry,timeExtent:m,mosaicRule:b,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:d,raster:this.raster,maxItemCount:a?1:null});delete h.f;const y=new pt(h),f=this.generateRasterInfo(this.renderingRule);return new Promise(r=>{f.then(()=>{He(this.url,y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then(t=>{var a;const s=e.outFields,l=t.value.toLowerCase().indexOf("nodata")>-1;if(o&&!d&&null!=t&&null!=(a=t.catalogItems)&&a.features.length&&(n||!l)){const a=this.objectIdField||"ObjectId",o=t.catalogItems.features,l=o.map(e=>e.attributes&&e.attributes[a]),u=new Ze["a"]({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[a]});return this.queryRasters(u).then(l=>{l&&l.features&&l.features.length>0&&l.features.forEach(t=>{o.forEach(r=>{r.attributes[a]===t.attributes[a]&&(r.geometry=new $e["a"](t.geometry),r.geometry.spatialReference=e.outSpatialReference)})}),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:n,templateFields:s}))}).catch(()=>{throw new O["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:n,templateFields:s}))}).catch(()=>{throw new O["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const r=Object(f["default"])(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),i=Object(f["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([r,i]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async createStreamlinesMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):Object(Ot["a"])(e.rendererSettings,e.flowData,Object(s["k"])(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),Object(s["k"])(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=Object(s["k"])(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,a=this._getRasterFunctionInfos();return Promise.all([r,i,a]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,jt.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(s["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(Object(s["j"])(e)||Object(s["j"])(this.multidimensionalInfo)||Object(s["j"])(t)||Object(s["j"])(null==r?void 0:r.startField))return e;const{startField:i}=r;var a;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(a=e.multidimensionalDefinition)?void 0:a.filter(e=>e.dimensionName!==i),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter(e=>e.dimensionName===i),o=Object(s["k"])(t.start)?t.start.getTime():null,l=Object(s["k"])(t.end)?t.end.getTime():null,c=null==o||null==l||o===l,u=c?[o||l]:[[o,l]],p=this.version>=10.8;if(n.length)n.forEach(e=>{e.dimensionName===i&&(p?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=c,e.values=u))});else if(!p){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=i,e.isSlice=c,e.values=u}):e.multidimensionalDefinition.push(new I["a"]({variableName:"",dimensionName:i,isSlice:c,values:u}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return Object(s["j"])(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new O["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=Object(s["k"])(e)?Object(u["d"])(Ze["a"],e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new je["a"];this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||Object(Re["d"])(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await Object(f["default"])(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new O["a"]("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if(!Object(s["k"])(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),a=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===a||10===a)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(Re["b"])(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(Re["a"])(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=Object(Re["e"])(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new we["a"]({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind().success||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:Object(s["k"])(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(ge["a"])(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await Object(f["default"])(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=r.variables)&&t.length&&r.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),r}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:Object(f["default"])(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.rasterFunctionInfos}):null}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new O["a"]("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(f["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>Te["default"].fromJSON(e.data)).catch(()=>null),n=!!(t.hasColormap&&this.version>=10.1)&&Object(f["default"])(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(f["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(f["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([a,n,s,o,l]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=Ie["a"].fromJSON(t.spatialReference||t.extent.spatialReference);return new Oe["a"]({width:i,height:a,bandCount:t.bandCount,extent:Ke["a"].fromJSON(t.extent),spatialReference:n,pixelSize:new oe["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(f["default"])(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then(e=>({imageElement:e.data,params:t}));const a=this._initJobHandler(),n=Object(f["default"])(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([n,a]).then(e=>{const r=e[0].data,a=t.format||"jpgpng";let n=a;if("bsq"!==n&&"bip"!==n&&(n=Object(ge["b"])(r)),!n)throw new O["a"]("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const s="gif"===a||"bmp"===a||a.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return s?Object(ge["a"])(r,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:a},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:r}=await Object(f["default"])(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r="",i=[];for(const a in t)if(t.hasOwnProperty(a)){const e=t[a],n=e.extent;let s=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(s=!1,o=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new I["a"]({variableName:r,dimensionName:t[a].name,isSlice:s,values:o}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new de;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),a=i&&i.format;if(a){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,a)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:a,returnDomainValues:n,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!c&&!d){const e={};e[p]=0,u=[r],c=[new h["a"](this.fullExtent,null,e)]}if(!c)return[];let b,y,f;this._updateResponseFieldNames(c,o),d&&!a&&(c=[]);for(let h=0;h<c.length;h++){if(b=c[h],null!=r){if(y=u[h],f=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!a)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";b.attributes[e]=this._formatAttributeValue(y,e),b.attributes[t]=this._formatAttributeValue(f,t),this._updateFeatureWithMagDirValues(b,y);const n=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(s["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?n?y:r:f;this.renderingRule||(o=n?y:r),this._updateFeatureWithRasterAttributeTableValues(b,o)}if(b.sourceLayer=this,n&&this._updateFeatureWithDomainValues(b),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];b.attributes[t]=this._formatAttributeValue(l[e],t)}m.push(c[h])}return m}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||Object(s["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const a=r.fields,n=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=n&&n[0];if(!o)return;const l=i.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)})}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map(e=>parseFloat(e)),i=r.map(e=>[e]),a=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new fe["a"]({height:1,width:1,pixelType:"f32",pixels:i,statistics:a});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new Ke["a"](0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:Object(ve["i"])([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter(e=>e.code===r)[0];i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;Object(s["k"])(r)&&e.forEach(e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:a}=e,n=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:a,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return Object(a["a"])([Object(c["b"])()],t.prototype,"_functionRasterInfos",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"_symbolizer",void 0),Object(a["a"])([Object(c["b"])({dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a["a"])([Object(S["a"])("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"_serviceSourceType",void 0),Object(a["a"])([Object(S["a"])("_serviceSourceType",["serviceSourceType","fields"])],t.prototype,"readServiceSourceType",null),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),Object(a["a"])([Object(S["a"])("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),Object(a["a"])([Object(c["b"])()],t.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(w["a"])("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a["a"])([Object(S["a"])("bandIds")],t.prototype,"readBandIds",null),Object(a["a"])([Object(c["b"])({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a["a"])([Object(S["a"])("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a["a"])([Object(c["b"])({type:Number})],t.prototype,"compressionQuality",void 0),Object(a["a"])([Object(d["a"])("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(c["b"])({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(d["a"])("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(c["b"])({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"rasterInfo",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,type:[he["a"]]})],t.prototype,"fields",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"fieldsIndex",null),Object(a["a"])([Object(c["b"])({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a["a"])([Object(S["a"])("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a["a"])([Object(c["b"])({type:Ke["a"]})],t.prototype,"fullExtent",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a["a"])([Object(c["b"])({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a["a"])([Object(c["b"])({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{type:me["a"].jsonValues,read:me["a"].read,write:me["a"].write}})],t.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"minScale",void 0),Object(a["a"])([Object(S["a"])("service","minScale")],t.prototype,"readMinScale",null),Object(a["a"])([Object(c["b"])()],t.prototype,"maxScale",void 0),Object(a["a"])([Object(S["a"])("service","maxScale")],t.prototype,"readMaxScale",null),Object(a["a"])([Object(c["b"])({type:de})],t.prototype,"mosaicRule",null),Object(a["a"])([Object(S["a"])("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a["a"])([Object(d["a"])("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(w["a"])("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a["a"])([Object(c["b"])({json:{type:u["a"]}})],t.prototype,"noData",void 0),Object(a["a"])([Object(d["a"])("noData")],t.prototype,"writeNoData",null),Object(a["a"])([Object(c["b"])({type:String,json:{type:me["b"].jsonValues,read:me["b"].read,write:me["b"].write}})],t.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(c["b"])({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a["a"])([Object(S["a"])("objectIdField")],t.prototype,"readObjectIdField",null),Object(a["a"])([Object(c["b"])({})],t.prototype,"geometryType",void 0),Object(a["a"])([Object(c["b"])({})],t.prototype,"typeIdField",void 0),Object(a["a"])([Object(c["b"])({})],t.prototype,"types",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"parsedUrl",null),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(w["a"])("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(w["a"])("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a["a"])([Object(c["b"])({type:Function})],t.prototype,"pixelFilter",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"viewId",void 0),Object(a["a"])([Object(c["b"])({types:y["a"],json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:y["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"animated-flow"!==e.type})}}}}})],t.prototype,"renderer",void 0),Object(a["a"])([Object(S["a"])("renderer")],t.prototype,"readRenderer",null),Object(a["a"])([Object(d["a"])("renderer")],t.prototype,"writeRenderer",null),Object(a["a"])([Object(c["b"])(x["h"])],t.prototype,"opacity",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(w["a"])("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"rasterFields",null),Object(a["a"])([Object(c["b"])({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a["a"])([Object(c["b"])({type:k})],t.prototype,"renderingRule",null),Object(a["a"])([Object(S["a"])("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a["a"])([Object(d["a"])("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"serviceDataType",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,type:Ie["a"]})],t.prototype,"spatialReference",void 0),Object(a["a"])([Object(S["a"])("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a["a"])([Object(c["b"])({json:{type:gt.jsonValues}})],t.prototype,"pixelType",void 0),Object(a["a"])([Object(S["a"])("pixelType")],t.prototype,"readPixelType",null),Object(a["a"])([Object(d["a"])("pixelType")],t.prototype,"writePixelType",null),Object(a["a"])([Object(c["b"])({constructOnly:!0,type:Oe["a"]})],t.prototype,"serviceRasterInfo",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"sourceJSON",void 0),Object(a["a"])([Object(c["b"])(x["n"])],t.prototype,"url",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"version",void 0),Object(a["a"])([Object(S["a"])("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a["a"])([Object(p["a"])("esri.layers.mixins.ArcGISImageService")],t),t};var xt=r("3d59"),It=r("997b"),Nt=r("8b28"),_t=r("b911"),Tt=r("0db5"),Ft=r("8e17"),Ct=r("5a62"),Pt=r("601a"),Dt=r("f51b");let Mt=class extends(Object(It["a"])(Object(Pt["a"])(Object(Ft["a"])(Object(Ct["a"])(Object(_t["a"])(Object(Tt["a"])(St(Object(Nt["a"])(Object(xt["a"])(Object(o["a"])(m["a"]))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(s["k"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l["t"]).then(()=>this._fetchService(t))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const a="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=a&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;a&&(s.add("raster.itempixelvalue"),n&&s.add("raster.magnitude").add("raster.direction"));for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||i.add(o.name)}return Object(Dt["a"])({fields:t,title:r},{...e,visibleFieldNames:i})}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}};Object(a["a"])([Object(c["b"])(x["e"])],Mt.prototype,"legendEnabled",void 0),Object(a["a"])([Object(c["b"])({type:["show","hide"]})],Mt.prototype,"listMode",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Mt.prototype,"isReference",void 0),Object(a["a"])([Object(c["b"])({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Mt.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(d["a"])("web-map","operationalLayerType")],Mt.prototype,"writeOperationalLayerType",null),Object(a["a"])([Object(c["b"])(x["j"])],Mt.prototype,"popupEnabled",void 0),Object(a["a"])([Object(c["b"])({type:n["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Mt.prototype,"popupTemplate",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],Mt.prototype,"defaultPopupTemplate",null),Object(a["a"])([Object(c["b"])({readOnly:!0,json:{read:!1}})],Mt.prototype,"type",void 0),Mt=Object(a["a"])([Object(p["a"])("esri.layers.ImageryLayer")],Mt);const At=Mt}}]);