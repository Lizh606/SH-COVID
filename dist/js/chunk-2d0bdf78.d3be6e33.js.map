{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/layers/support/ElevationTile.js","webpack:///./node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"names":["a","e","this","tile","t","extent","samplerData","pixelData","values","width","height","safeWidth","noDataValue","dx","dy","x0","y1","s","h","l","o","r","n","d","u","f","c","p","Math","floor","x","D","m","w","y","V","g","i","ignoreInvisibleLayers","filter","visible","slice","length","fromGeometry","returnSampleInfo","R","query","_queryAllContinue","geometry","export","sampleInfo","type","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","_createSampler","_createSamplerAllContinue","tileInfo","equals","source","dest","elevationTiles","layer","options","pop","samplers","map","concat","coordinates","demResolution","push","clone","forEach","z","project","outSpatialReference","_extractSampleInfo","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","fullExtent","sample","outsideExtentTile","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","lods","abs","resolution","E","minDemResolution","_selectTilesFinestContiguousAt","tilemapCache","getTilesToFetch","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","async","uid","id","get","fetchTile","put","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","_cloneCoordinate","points","hasZ","hasM","spatiaReference","paths","super","tileAt","some","candidateTiles","fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","clear","add","_uniqueNonOverlappingTiles","has","sort","updateTileInfo","_tileIsMasked","findIndex"],"mappings":"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","file":"js/chunk-2d0bdf78.d3be6e33.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class e{constructor(a,e=null){if(this.tile=a,t(e)){const t=a.extent;this.samplerData={pixelData:e.values,width:e.width,height:e.height,safeWidth:.99999999*(e.width-1),noDataValue:e.noDataValue,dx:(e.width-1)/(t[2]-t[0]),dy:(e.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]}}}sample(t,e){if(a(this.samplerData))return;const{safeWidth:s,width:h,pixelData:l,noDataValue:o,dx:r,dy:n,y1:d,x0:u}=this.samplerData,f=i(n*(d-e),0,s),c=i(r*(t-u),0,s),p=Math.floor(f),x=Math.floor(c),D=p*h+x,m=D+h,w=l[D],y=l[m],V=l[D+1],g=l[m+1];if(w!==o&&y!==o&&V!==o&&g!==o){const t=c-x,a=w+(V-w)*t;return a+(y+(g-y)*t-a)*(f-p)}}}function i(t,a,e){return t<a?a:t>e?e:t}export{e as ElevationTile,e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isNone as i,isSome as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(i(e.layer.fullExtent))return;const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const o=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const i=e.x,s=e.y;(i<o.xmin||i>o.xmax||s<o.ymin||s>o.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{const s=`${e.layer.uid}:${i.id}:${r}`,n=o(a)?a.get(s):null,c=o(n)?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});o(a)&&a.put(s,c),l[i.id]=new T(i,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);o(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const o=this.extent;if(i(o))return-1;for(let i=t.lods.length-1;i>=0;i--){const s=t.lods[i],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/n)<=e)return i}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(i(t))return;const o=this.layer.tileInfo,s=o.lods[e],l=o.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*o.size[0],a=s.resolution*o.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let i=0;i<c;i++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-i,col:l.col+e};o.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,v as default,E as getFinestLodIndex};\n"],"sourceRoot":""}