(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0bff4d"],{4072:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return I}));var s=i("a4ee"),a=i("e92d"),l=i("f4cc"),r=i("59b2"),h=(i("b50f"),i("c120"),i("cea0"),i("d386")),n=i("164ae"),c=i("566d"),u=i("d81b"),o=i("018d"),d=i("ae54"),f=i("07cd"),p=i("d302"),y=i("365a"),w=i("6c7a");const _=[102113,102100,3857,3785,900913],b=[0,0],g=a["a"].getLogger("esri.views.2d.layers.WMTSLayerView2D");let m=class extends(Object(w["a"])(Object(n["a"])(Object(c["a"])(y["a"])))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this._tileRequests=new Map,this.layer=null}get tileMatrixSet(){if(this.layer.activeLayer.tileMatrixSetId)return this.layer.activeLayer.tileMatrixSet;const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(this.layer.activeLayer.tileMatrixSetId=e.id,e):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){if(!this.tileMatrixSet)return;const{tileInfo:e}=this.tileMatrixSet;this._tileInfoView=new o["a"](e),this._fetchQueue=new f["a"]({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new p["a"]({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.handles.add(this.watch(["layer.activeLayer.styleId","tileMatrixSet"],()=>this._refresh()),this.declaredClass),super.attach()}detach(){var e,t;super.detach(),this.handles.remove(this.declaredClass),null==(e=this._tileStrategy)||e.destroy(),null==(t=this._fetchQueue)||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(b,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}async doRefresh(){this.updateRequested||this.suspended||this._refresh()}isUpdating(){return this._fetchQueue.length>0}async fetchTile(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:s,resamplingLevel:a=0}=t;if(!i)return this._fetchImage(e,s);const r=new d["a"](0,0,0,0);let h;try{await i.fetchAvailabilityUpsample(e.level,e.row,e.col,r,{signal:s}),h=await this._fetchImage(r,s)}catch(n){if(Object(l["m"])(n))throw n;if(a<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const s=new d["a"](i),l=await this.fetchTile(s,{...t,resamplingLevel:a+1});return Object(u["b"])(this._tileInfoView,l,s,e)}}throw n}return Object(u["b"])(this._tileInfoView,h,r,e)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){Object(l["m"])(t)||g.error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}_refresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(e=>{if(!e.bitmap.source)return;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then(t=>{e.bitmap.source=t}).catch(t=>{Object(l["m"])(t)||(e.bitmap.source=null)}).finally(()=>{e.requestRender(),this.notifyChange("updating"),t.fulfilled=!0})};this._tileRequests.set(e,t)}),this.notifyChange("updating")}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find(e=>e.tileInfo.spatialReference.wkid===t.wkid);return!i&&t.isWebMercator&&(i=e.tileMatrixSets.find(e=>_.indexOf(e.tileInfo.spatialReference.wkid)>-1)),i}};Object(s["a"])([Object(r["b"])()],m.prototype,"suspended",void 0),Object(s["a"])([Object(r["b"])({readOnly:!0})],m.prototype,"tileMatrixSet",null),m=Object(s["a"])([Object(h["a"])("esri.views.2d.layers.WMTSLayerView2D")],m);const I=m}}]);
//# sourceMappingURL=chunk-2d0bff4d.900b725e.js.map