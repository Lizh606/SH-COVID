{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/layers/support/labelFormatUtils.js"],"names":["u","getLogger","p","type","evaluate","c","getAttribute","e","t","field","async","f","r","a","symbol","n","where","o","d","expression","$feature","repurposeFeature","repurposeAdapter","toString","error","feature","needsHydrationToEvaluate","replace","slice","get","attributes","name","m","WhereClause","create","y","testFeature","l","domain","codedValues","code","range","minValue","maxValue","i"],"mappings":"gHAAA,+LAIia,MAAMA,EAAE,OAAEC,UAAU,wCAAwCC,EAAE,CAACC,KAAK,SAASC,SAAS,IAAI,MAAMC,EAAE,CAACC,aAAa,CAACC,EAAEC,IAAID,EAAEE,MAAMD,IAAIE,eAAeC,EAAEH,EAAEI,EAAEC,GAAG,IAAIL,IAAIA,EAAEM,OAAO,OAAOZ,EAAE,MAAMa,EAAEP,EAAEQ,MAAMC,EAAE,eAAET,GAAGG,EAAEI,QAAQ,gDAAwC,KAAK,IAAIG,EAAE,GAAG,WAAWD,EAAEd,KAAK,CAAC,MAAMK,QAAQ,eAAES,EAAEE,WAAWN,EAAED,GAAGM,EAAE,CAACf,KAAK,SAAS,SAASS,GAAG,IAAI,MAAML,EAAEC,EAAEJ,SAAS,CAACgB,SAAS,eAAeR,EAAEJ,EAAEa,iBAAiBT,GAAGJ,EAAEc,iBAAiBV,KAAK,GAAG,MAAML,EAAE,OAAOA,EAAEgB,WAAW,MAAMV,GAAGb,EAAEwB,MAAM,IAAI,OAAE,wBAAwB,oEAAoE,CAACC,QAAQb,EAAEO,WAAWF,KAAK,OAAO,MAAMS,yBAAyB,IAAI,MAAM,eAAET,EAAEE,kBAAkBD,EAAE,CAACf,KAAK,SAASC,SAASG,GAAGU,EAAEE,WAAWQ,QAAQ,WAAYnB,IAAI,MAAMK,EAAEL,EAAEoB,MAAM,GAAG,GAAGb,EAAEH,EAAEiB,IAAIhB,GAAG,IAAIE,EAAE,OAAOP,EAAE,IAAIS,EAAE,KAA2F,MAAnF,eAAeV,EAAGA,GAAGA,EAAEuB,aAAab,EAAEV,EAAEuB,WAAWf,EAAEgB,OAAYd,EAAEV,EAAEE,MAAMM,EAAEgB,MAAa,MAAMd,EAAE,GAAGe,EAAEf,EAAEF,MAAO,GAAGA,EAAE,CAAC,IAAIR,EAAE,IAAIA,EAAEI,EAAEsB,YAAYC,OAAOnB,EAAEH,GAAG,MAAMuB,GAAG,OAAOjC,EAAE,MAAMM,EAAEU,EAAEd,SAASc,EAAEd,SAASQ,IAAI,MAAMC,EAAE,eAAeD,OAAE,EAAOP,EAAE,OAAOE,EAAE6B,YAAYxB,EAAEC,GAAGL,EAAEI,GAAG,MAAM,OAAOM,EAAE,SAASc,EAAEzB,EAAEC,GAAG,GAAG,MAAMD,EAAE,MAAM,GAAG,MAAM8B,EAAE7B,EAAE8B,OAAO,GAAGD,EAAE,GAAG,eAAeA,EAAElC,MAAM,gBAAgBkC,EAAElC,KAAK,CAAC,MAAMK,EAAED,EAAE,IAAI,MAAMA,KAAK8B,EAAEE,YAAY,GAAGhC,EAAEiC,OAAOhC,EAAE,OAAOD,EAAEwB,UAAU,GAAG,UAAUM,EAAElC,KAAK,CAAC,MAAMK,GAAGD,EAAEK,EAAE,UAAUyB,EAAEA,EAAEI,MAAM,GAAGJ,EAAEK,SAAS7B,EAAE,UAAUwB,EAAEA,EAAEI,MAAM,GAAGJ,EAAEM,SAAS,GAAG/B,GAAGJ,GAAGA,GAAGK,EAAE,OAAOwB,EAAEN,KAAK,IAAIa,EAAErC,EAAE,MAAM,SAASC,EAAEL,MAAM,sBAAsBK,EAAEL,KAAKyC,EAAE,eAAEA,EAAE,eAAE,eAAe,eAAEpC,KAAKoC,EAAE,gBAAGA,IAAIA,GAAG","file":"js/chunk-2d222178.6cc3f765.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import t from\"../../core/Logger.js\";import{formatDate as r,convertDateFormatToIntlOptions as a}from\"../../intl/date.js\";import{formatNumber as n}from\"../../intl/number.js\";import{isNumericField as o}from\"./fieldUtils.js\";import{getLabelExpression as l,getSingleFieldArcadeExpression as i}from\"./labelUtils.js\";import{createLabelExpression as s}from\"../../support/arcadeOnDemand.js\";const u=t.getLogger(\"esri.layers.support.labelFormatUtils\"),p={type:\"simple\",evaluate:()=>null},c={getAttribute:(e,t)=>e.field(t)};async function f(t,r,a){if(!t||!t.symbol)return p;const n=t.where,o=l(t),f=n?await import(\"../../core/sql/WhereClause.js\"):null;let d;if(\"arcade\"===o.type){const t=await s(o.expression,a,r);d={type:\"arcade\",evaluate(r){try{const e=t.evaluate({$feature:\"attributes\"in r?t.repurposeFeature(r):t.repurposeAdapter(r)});if(null!=e)return e.toString()}catch(a){u.error(new e(\"bad-arcade-expression\",\"Encountered an error when evaluating label expression for feature\",{feature:r,expression:o}))}return null},needsHydrationToEvaluate:()=>null==i(o.expression)}}else d={type:\"simple\",evaluate:e=>o.expression.replace(/{[^}]*}/g,(t=>{const a=t.slice(1,-1),n=r.get(a);if(!n)return t;let o=null;if(\"attributes\"in e){e&&e.attributes&&(o=e.attributes[n.name])}else o=e.field(n.name);return null==o?\"\":m(o,n)}))};if(n){let e;try{e=f.WhereClause.create(n,r)}catch(y){return p}const t=d.evaluate;d.evaluate=r=>{const a=\"attributes\"in r?void 0:c;return e.testFeature(r,a)?t(r):null}}return d}function m(e,t){if(null==e)return\"\";const l=t.domain;if(l)if(\"codedValue\"===l.type||\"coded-value\"===l.type){const t=e;for(const e of l.codedValues)if(e.code===t)return e.name}else if(\"range\"===l.type){const t=+e,r=\"range\"in l?l.range[0]:l.minValue,a=\"range\"in l?l.range[1]:l.maxValue;if(r<=t&&t<=a)return l.name}let i=e;return\"date\"===t.type||\"esriFieldTypeDate\"===t.type?i=r(i,a(\"short-date\")):o(t)&&(i=n(+i)),i||\"\"}export{f as createLabelFunction,m as formatField};\n"],"sourceRoot":""}