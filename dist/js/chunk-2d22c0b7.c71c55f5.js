(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22c0b7"],{f20e:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return T}));var a=r("a4ee"),i=r("2eab"),o=r("ce50"),l=r("e92d"),s=r("b2b2"),n=r("e694"),c=r("f4cc"),d=r("e041"),p=r("59b2"),h=(r("b50f"),r("c120"),r("cea0"),r("afcf")),u=r("d386"),b=r("e64d"),y=r("a6a3"),v=r("b485"),j=r("3d59"),O=r("b911"),w=r("0db5"),m=r("22f4"),g=r("d378");const f=l["a"].getLogger("esri.layers.ElevationLayer");let S=class extends(Object(v["a"])(Object(j["a"])(Object(O["a"])(Object(w["a"])(Object(n["a"])(y["a"])))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=Object(g["a"])()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=Object(s["s"])(this._lercDecoder)}set minScale(e){this.constructed&&f.warn(this.declaredClass+".minScale support has been removed (since 4.5)")}get minScale(){}set maxScale(e){this.constructed&&f.warn(this.declaredClass+".maxScale support has been removed (since 4.5)")}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=Object(s["l"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new o["a"]("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(c["v"]).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(e,t,r,a){const o=Object(s["l"])((a=a||{signal:null}).signal)?a.signal:a.signal=(new AbortController).signal,l={responseType:"array-buffer",signal:o},n={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,r,a)).then(()=>Object(i["default"])(this.getTileUrl(e,t,r),l)).then(e=>this._lercDecoder.decode(e.data,n,o)).then(e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue}))}getTileUrl(e,t,r){const a=!this.tilemapCache&&this.supportsBlankTile,i=Object(d["E"])({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${i?"?"+i:""}`}async queryElevation(e,t){const{ElevationQuery:a}=await r.e("chunk-2d0bdf78").then(r.bind(null,"2df6"));return Object(c["w"])(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await r.e("chunk-2d0bdf78").then(r.bind(null,"2df6"));return Object(c["w"])(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await Object(i["default"])(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};Object(a["a"])([Object(p["b"])({json:{read:{source:"copyrightText"}}})],S.prototype,"copyright",void 0),Object(a["a"])([Object(p["b"])({readOnly:!0,type:b["a"]})],S.prototype,"heightModelInfo",void 0),Object(a["a"])([Object(p["b"])({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],S.prototype,"path",void 0),Object(a["a"])([Object(p["b"])({type:["show","hide"]})],S.prototype,"listMode",void 0),Object(a["a"])([Object(p["b"])({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],S.prototype,"minScale",null),Object(a["a"])([Object(p["b"])({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],S.prototype,"maxScale",null),Object(a["a"])([Object(p["b"])({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],S.prototype,"opacity",void 0),Object(a["a"])([Object(p["b"])({type:["ArcGISTiledElevationServiceLayer"]})],S.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(p["b"])()],S.prototype,"sourceJSON",void 0),Object(a["a"])([Object(p["b"])({json:{read:!1},value:"elevation",readOnly:!0})],S.prototype,"type",void 0),Object(a["a"])([Object(p["b"])(m["n"])],S.prototype,"url",void 0),Object(a["a"])([Object(p["b"])()],S.prototype,"version",void 0),Object(a["a"])([Object(h["a"])("version",["currentVersion"])],S.prototype,"readVersion",null),S=Object(a["a"])([Object(u["a"])("esri.layers.ElevationLayer")],S),S.prototype.fetchTile.__isDefault__=!0;const T=S}}]);
//# sourceMappingURL=chunk-2d22c0b7.c71c55f5.js.map